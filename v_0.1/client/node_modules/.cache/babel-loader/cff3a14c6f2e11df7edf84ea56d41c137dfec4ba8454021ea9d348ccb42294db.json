{"ast":null,"code":"var _jsxFileName = \"/home/amfarwati/Documents/SPOC_Analyse_Impact_IT/v_0.1/client/src/components/Inventory.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState, useEffect, createContext, useContext } from 'react';\nimport { User_Context } from '../pages/Dashboard';\nimport { API_Context } from '../pages/Dashboard';\nimport \"../styles/Inventory.css\";\nimport FileUpload from \"./InputFileUpload\";\nimport Item from \"./InventoryItem\";\nimport Button from '@mui/joy/Button';\nimport Add from '@mui/icons-material/Add';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Type_Context = /*#__PURE__*/createContext();\nfunction Inventory(props) {\n  _s();\n  const [listItem, setListItem] = useState([]);\n  const [typeList, setTypeList] = useState([]);\n  const userParc = useContext(User_Context)[0];\n  const [baseUrl] = useContext(API_Context);\n\n  // requete got pour récupérer list des types pris en charge\n  const handlerGetTypeList = () => {\n    /*\n    got(`${baseUrl}/getTypeList`)\n    .then((res)=>{setTypeList(res);})\n    .catch((error)=>{console.error('ERROR:', error)});\n    */\n  };\n  const handlerDeleteItem = (id, type, quantity) => {\n    let tempList = [...listItem];\n    userParc.forEach(item => {\n      if (type === item.type) {\n        item.quantity = item.quantity - quantity;\n      }\n    });\n    tempList = tempList.filter(item => item.id !== id);\n    setListItem(tempList);\n  };\n  const handlerAddItem = () => {\n    let tempList = [...listItem];\n    let itemId = null;\n    const scrollingElement = document.scrollingElement || document.body;\n    scrollingElement.scrollTop = scrollingElement.scrollHeight;\n    if (tempList.length === 0) {\n      itemId = 0;\n    } else {\n      itemId = tempList[tempList.length - 1].id + 1;\n    }\n    ;\n    tempList.push({\n      id: itemId,\n      item: /*#__PURE__*/_jsxDEV(Item, {\n        id: itemId,\n        type: null,\n        quantity: 0,\n        handlerDeleteItem: handlerDeleteItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 29\n      }, this)\n    });\n    setListItem(tempList);\n  };\n  const handlerAddParcItem = parc => {\n    let tempList = [];\n    const scrollingElement = document.scrollingElement || document.body;\n    scrollingElement.scrollTop = scrollingElement.scrollHeight;\n    parc.forEach(item => {\n      let itemId = null;\n      if (tempList.length === 0) {\n        itemId = 0;\n      } else {\n        itemId = tempList[tempList.length - 1].id + 1;\n      }\n      ;\n      tempList.push({\n        id: itemId,\n        item: /*#__PURE__*/_jsxDEV(Item, {\n          id: itemId,\n          itemId: item.type,\n          quantity: item.quantity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 31\n        }, this)\n      });\n    });\n    setListItem(tempList);\n  };\n  useEffect(() => {\n    if (userParc.length > 0) {\n      handlerAddParcItem(userParc);\n    }\n  }, [userParc]);\n  useEffect(() => {\n    handlerGetTypeList();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Type_Context.Provider, {\n    value: [typeList, setTypeList],\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inventory\",\n      children: [listItem.map(item => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item\",\n          children: item.item\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 39\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(Button, {\n        startDecorator: /*#__PURE__*/_jsxDEV(Add, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 31\n        }, this),\n        color: \"neutral\",\n        variant: \"solid\",\n        onClick: handlerAddItem,\n        style: {\n          borderRadius: 30,\n          padding: \"18px 36px\",\n          fontSize: \"20px\"\n        },\n        size: \"lg\",\n        children: \"Add Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        startDecorator: /*#__PURE__*/_jsxDEV(Add, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 31\n        }, this),\n        color: \"neutral\",\n        variant: \"solid\",\n        onClick: handlerGetTypeList,\n        style: {\n          borderRadius: 30,\n          padding: \"18px 36px\",\n          fontSize: \"20px\"\n        },\n        size: \"lg\",\n        children: \"Reload BD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(FileUpload, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n_s(Inventory, \"rE/o3l4rv+AvhnRaaL0TxbJZ73k=\");\n_c = Inventory;\nexport default Inventory;\nvar _c;\n$RefreshReg$(_c, \"Inventory\");","map":{"version":3,"names":["React","useState","useEffect","createContext","useContext","User_Context","API_Context","FileUpload","Item","Button","Add","jsxDEV","_jsxDEV","Type_Context","Inventory","props","_s","listItem","setListItem","typeList","setTypeList","userParc","baseUrl","handlerGetTypeList","handlerDeleteItem","id","type","quantity","tempList","forEach","item","filter","handlerAddItem","itemId","scrollingElement","document","body","scrollTop","scrollHeight","length","push","fileName","_jsxFileName","lineNumber","columnNumber","handlerAddParcItem","parc","Provider","value","children","className","map","startDecorator","color","variant","onClick","style","borderRadius","padding","fontSize","size","_c","$RefreshReg$"],"sources":["/home/amfarwati/Documents/SPOC_Analyse_Impact_IT/v_0.1/client/src/components/Inventory.js"],"sourcesContent":["import React from 'react';\nimport { useState, useEffect, createContext, useContext } from 'react';\nimport { User_Context } from '../pages/Dashboard';\nimport { API_Context } from '../pages/Dashboard';\nimport \"../styles/Inventory.css\";\nimport FileUpload from \"./InputFileUpload\";\nimport Item from \"./InventoryItem\";\nimport Button from '@mui/joy/Button';\nimport Add from '@mui/icons-material/Add';\n\n\nexport const Type_Context = createContext();\n\nfunction Inventory(props) {\n\n  const [listItem, setListItem] = useState([]);\n  const [typeList, setTypeList] = useState([]);\n  const userParc = useContext(User_Context)[0];\n  const [baseUrl] = useContext(API_Context);\n  \n\n  // requete got pour récupérer list des types pris en charge\n  const handlerGetTypeList = ()=>{\n    /*\n    got(`${baseUrl}/getTypeList`)\n    .then((res)=>{setTypeList(res);})\n    .catch((error)=>{console.error('ERROR:', error)});\n    */\n  }\n\n  const handlerDeleteItem = (id, type, quantity) => {\n    let tempList = [...listItem];\n\n    userParc.forEach((item)=>{\n      if(type === item.type){\n        item.quantity = item.quantity-quantity;\n      }\n    });\n\n    tempList = tempList.filter(item => item.id !== id);\n    setListItem(tempList);\n  };\n\n  const handlerAddItem = () => {\n    let tempList = [...listItem];\n    let itemId = null\n\n    const scrollingElement = (document.scrollingElement || document.body);\n    scrollingElement.scrollTop = scrollingElement.scrollHeight;\n\n    if (tempList.length===0){itemId=0;}\n    else{itemId=(tempList[tempList.length-1].id)+1;};\n\n    tempList.push({   id: itemId,\n                      item :<Item id={itemId} type={null} quantity={0} handlerDeleteItem={handlerDeleteItem}/>\n                  })\n\n    setListItem(tempList);\n  };\n\n  const handlerAddParcItem = (parc) => {\n    let tempList = [];\n\n    const scrollingElement = (document.scrollingElement || document.body);\n    scrollingElement.scrollTop = scrollingElement.scrollHeight;\n\n    parc.forEach((item) => {\n      let itemId = null;\n\n      if (tempList.length===0){itemId=0;}\n      else{itemId=(tempList[tempList.length-1].id)+1;};\n\n      tempList.push({   id: itemId,\n                        item :<Item id={itemId} itemId={item.type} quantity={item.quantity}/>\n                    })\n    });\n\n    setListItem(tempList);\n  }\n\n  useEffect(() => {\n    if(userParc.length > 0){\n      handlerAddParcItem(userParc);\n    }\n  },[userParc]);\n\n  useEffect(() => {\n    handlerGetTypeList();\n  },[]);\n\n  return (\n    <Type_Context.Provider value={ [typeList, setTypeList] }>\n    <div className='inventory'>\n      {listItem.map((item) => {return <div className='item' key ={item.id} >{item.item}</div>})}\n      <Button startDecorator={<Add />} \n              color=\"neutral\"\n              variant=\"solid\" \n              onClick={handlerAddItem}\n              style={{\n                borderRadius: 30,\n                padding: \"18px 36px\",\n                fontSize: \"20px\"\n            }}\n              size=\"lg\">Add Item</Button>\n      <Button startDecorator={<Add />} \n              color=\"neutral\"\n              variant=\"solid\" \n              onClick={handlerGetTypeList}\n              style={{\n                borderRadius: 30,\n                padding: \"18px 36px\",\n                fontSize: \"20px\"\n            }}\n              size=\"lg\">Reload BD</Button>\n      <FileUpload />\n    </div>\n    </Type_Context.Provider>\n  )\n}\nexport default Inventory\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}