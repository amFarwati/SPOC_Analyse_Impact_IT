{"ast":null,"code":"'use strict';\n\nconst errors = require('./errors');\nconst asStream = require('./as-stream');\nconst asPromise = require('./as-promise');\nconst normalizeArguments = require('./normalize-arguments');\nconst merge = require('./merge');\nconst deepFreeze = require('./utils/deep-freeze');\nconst getPromiseOrStream = options => options.stream ? asStream(options) : asPromise(options);\nconst aliases = ['get', 'post', 'put', 'patch', 'head', 'delete'];\nconst create = defaults => {\n  defaults = merge({}, defaults);\n  normalizeArguments.preNormalize(defaults.options);\n  if (!defaults.handler) {\n    // This can't be getPromiseOrStream, because when merging\n    // the chain would stop at this point and no further handlers would be called.\n    defaults.handler = (options, next) => next(options);\n  }\n  function got(url, options) {\n    try {\n      return defaults.handler(normalizeArguments(url, options, defaults), getPromiseOrStream);\n    } catch (error) {\n      if (options && options.stream) {\n        throw error;\n      } else {\n        return Promise.reject(error);\n      }\n    }\n  }\n  got.create = create;\n  got.extend = options => {\n    let mutableDefaults;\n    if (options && Reflect.has(options, 'mutableDefaults')) {\n      mutableDefaults = options.mutableDefaults;\n      delete options.mutableDefaults;\n    } else {\n      mutableDefaults = defaults.mutableDefaults;\n    }\n    return create({\n      options: merge.options(defaults.options, options),\n      handler: defaults.handler,\n      mutableDefaults\n    });\n  };\n  got.mergeInstances = (...args) => create(merge.instances(args));\n  got.stream = (url, options) => got(url, {\n    ...options,\n    stream: true\n  });\n  for (const method of aliases) {\n    got[method] = (url, options) => got(url, {\n      ...options,\n      method\n    });\n    got.stream[method] = (url, options) => got.stream(url, {\n      ...options,\n      method\n    });\n  }\n  Object.assign(got, {\n    ...errors,\n    mergeOptions: merge.options\n  });\n  Object.defineProperty(got, 'defaults', {\n    value: defaults.mutableDefaults ? defaults : deepFreeze(defaults),\n    writable: defaults.mutableDefaults,\n    configurable: defaults.mutableDefaults,\n    enumerable: true\n  });\n  return got;\n};\nmodule.exports = create;","map":{"version":3,"names":["errors","require","asStream","asPromise","normalizeArguments","merge","deepFreeze","getPromiseOrStream","options","stream","aliases","create","defaults","preNormalize","handler","next","got","url","error","Promise","reject","extend","mutableDefaults","Reflect","has","mergeInstances","args","instances","method","Object","assign","mergeOptions","defineProperty","value","writable","configurable","enumerable","module","exports"],"sources":["/home/amfarwati/Documents/SPOC_Analyse_Impact_IT/v_0.1/client/node_modules/got/source/create.js"],"sourcesContent":["'use strict';\nconst errors = require('./errors');\nconst asStream = require('./as-stream');\nconst asPromise = require('./as-promise');\nconst normalizeArguments = require('./normalize-arguments');\nconst merge = require('./merge');\nconst deepFreeze = require('./utils/deep-freeze');\n\nconst getPromiseOrStream = options => options.stream ? asStream(options) : asPromise(options);\n\nconst aliases = [\n\t'get',\n\t'post',\n\t'put',\n\t'patch',\n\t'head',\n\t'delete'\n];\n\nconst create = defaults => {\n\tdefaults = merge({}, defaults);\n\tnormalizeArguments.preNormalize(defaults.options);\n\n\tif (!defaults.handler) {\n\t\t// This can't be getPromiseOrStream, because when merging\n\t\t// the chain would stop at this point and no further handlers would be called.\n\t\tdefaults.handler = (options, next) => next(options);\n\t}\n\n\tfunction got(url, options) {\n\t\ttry {\n\t\t\treturn defaults.handler(normalizeArguments(url, options, defaults), getPromiseOrStream);\n\t\t} catch (error) {\n\t\t\tif (options && options.stream) {\n\t\t\t\tthrow error;\n\t\t\t} else {\n\t\t\t\treturn Promise.reject(error);\n\t\t\t}\n\t\t}\n\t}\n\n\tgot.create = create;\n\tgot.extend = options => {\n\t\tlet mutableDefaults;\n\t\tif (options && Reflect.has(options, 'mutableDefaults')) {\n\t\t\tmutableDefaults = options.mutableDefaults;\n\t\t\tdelete options.mutableDefaults;\n\t\t} else {\n\t\t\tmutableDefaults = defaults.mutableDefaults;\n\t\t}\n\n\t\treturn create({\n\t\t\toptions: merge.options(defaults.options, options),\n\t\t\thandler: defaults.handler,\n\t\t\tmutableDefaults\n\t\t});\n\t};\n\n\tgot.mergeInstances = (...args) => create(merge.instances(args));\n\n\tgot.stream = (url, options) => got(url, {...options, stream: true});\n\n\tfor (const method of aliases) {\n\t\tgot[method] = (url, options) => got(url, {...options, method});\n\t\tgot.stream[method] = (url, options) => got.stream(url, {...options, method});\n\t}\n\n\tObject.assign(got, {...errors, mergeOptions: merge.options});\n\tObject.defineProperty(got, 'defaults', {\n\t\tvalue: defaults.mutableDefaults ? defaults : deepFreeze(defaults),\n\t\twritable: defaults.mutableDefaults,\n\t\tconfigurable: defaults.mutableDefaults,\n\t\tenumerable: true\n\t});\n\n\treturn got;\n};\n\nmodule.exports = create;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}