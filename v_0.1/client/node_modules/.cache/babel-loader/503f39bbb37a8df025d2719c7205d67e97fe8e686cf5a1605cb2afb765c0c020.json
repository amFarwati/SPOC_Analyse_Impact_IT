{"ast":null,"code":"'use client';\n\nimport * as React from 'react';\nimport { useTheme } from './ThemeProvider';\nimport defaultTheme from './defaultTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ColorInversion = /*#__PURE__*/React.createContext(undefined);\nexport const useColorInversion = childVariant => {\n  const overridableVariants = React.useContext(ColorInversion);\n  return {\n    /**\n     * Resolve the `color` value for the component.\n     * @param {ColorPaletteProp | 'inherit' | undefined} instanceColorProp The color defined on the instance.\n     * @param {ColorPaletteProp | 'inherit' | undefined} defaultColorProp The default color to use when variant inversion is not enabled.\n     */\n    getColor: (instanceColorProp, defaultColorProp) => {\n      if (overridableVariants && childVariant) {\n        if (overridableVariants.includes(childVariant)) {\n          // @ts-ignore internal logic\n          return instanceColorProp || 'context';\n        }\n      }\n      // @ts-ignore internal logic\n      return instanceColorProp || defaultColorProp;\n    }\n  };\n};\nexport function ColorInversionProvider({\n  children,\n  variant\n}) {\n  var _theme$colorInversion;\n  const theme = useTheme();\n  return /*#__PURE__*/_jsx(ColorInversion.Provider, {\n    value: variant ?\n    // `theme` could come from other emotion/styled-components context.\n    ((_theme$colorInversion = theme.colorInversionConfig) != null ? _theme$colorInversion : defaultTheme.colorInversionConfig)[variant] : undefined,\n    children: children\n  });\n}\nexport default ColorInversion;","map":{"version":3,"names":["React","useTheme","defaultTheme","jsx","_jsx","ColorInversion","createContext","undefined","useColorInversion","childVariant","overridableVariants","useContext","getColor","instanceColorProp","defaultColorProp","includes","ColorInversionProvider","children","variant","_theme$colorInversion","theme","Provider","value","colorInversionConfig"],"sources":["/home/amfarwati/Documents/SPOC_Analyse_Impact_IT/v_0.1/client/node_modules/@mui/joy/styles/ColorInversion.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { useTheme } from './ThemeProvider';\nimport defaultTheme from './defaultTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ColorInversion = /*#__PURE__*/React.createContext(undefined);\nexport const useColorInversion = childVariant => {\n  const overridableVariants = React.useContext(ColorInversion);\n  return {\n    /**\n     * Resolve the `color` value for the component.\n     * @param {ColorPaletteProp | 'inherit' | undefined} instanceColorProp The color defined on the instance.\n     * @param {ColorPaletteProp | 'inherit' | undefined} defaultColorProp The default color to use when variant inversion is not enabled.\n     */\n    getColor: (instanceColorProp, defaultColorProp) => {\n      if (overridableVariants && childVariant) {\n        if (overridableVariants.includes(childVariant)) {\n          // @ts-ignore internal logic\n          return instanceColorProp || 'context';\n        }\n      }\n      // @ts-ignore internal logic\n      return instanceColorProp || defaultColorProp;\n    }\n  };\n};\nexport function ColorInversionProvider({\n  children,\n  variant\n}) {\n  var _theme$colorInversion;\n  const theme = useTheme();\n  return /*#__PURE__*/_jsx(ColorInversion.Provider, {\n    value: variant ?\n    // `theme` could come from other emotion/styled-components context.\n    ((_theme$colorInversion = theme.colorInversionConfig) != null ? _theme$colorInversion : defaultTheme.colorInversionConfig)[variant] : undefined,\n    children: children\n  });\n}\nexport default ColorInversion;"],"mappings":"AAAA,YAAY;;AAEZ,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,QAAQ,QAAQ,iBAAiB;AAC1C,OAAOC,YAAY,MAAM,gBAAgB;AACzC,SAASC,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C,MAAMC,cAAc,GAAG,aAAaL,KAAK,CAACM,aAAa,CAACC,SAAS,CAAC;AAClE,OAAO,MAAMC,iBAAiB,GAAGC,YAAY,IAAI;EAC/C,MAAMC,mBAAmB,GAAGV,KAAK,CAACW,UAAU,CAACN,cAAc,CAAC;EAC5D,OAAO;IACL;AACJ;AACA;AACA;AACA;IACIO,QAAQ,EAAEA,CAACC,iBAAiB,EAAEC,gBAAgB,KAAK;MACjD,IAAIJ,mBAAmB,IAAID,YAAY,EAAE;QACvC,IAAIC,mBAAmB,CAACK,QAAQ,CAACN,YAAY,CAAC,EAAE;UAC9C;UACA,OAAOI,iBAAiB,IAAI,SAAS;QACvC;MACF;MACA;MACA,OAAOA,iBAAiB,IAAIC,gBAAgB;IAC9C;EACF,CAAC;AACH,CAAC;AACD,OAAO,SAASE,sBAAsBA,CAAC;EACrCC,QAAQ;EACRC;AACF,CAAC,EAAE;EACD,IAAIC,qBAAqB;EACzB,MAAMC,KAAK,GAAGnB,QAAQ,CAAC,CAAC;EACxB,OAAO,aAAaG,IAAI,CAACC,cAAc,CAACgB,QAAQ,EAAE;IAChDC,KAAK,EAAEJ,OAAO;IACd;IACA,CAAC,CAACC,qBAAqB,GAAGC,KAAK,CAACG,oBAAoB,KAAK,IAAI,GAAGJ,qBAAqB,GAAGjB,YAAY,CAACqB,oBAAoB,EAAEL,OAAO,CAAC,GAAGX,SAAS;IAC/IU,QAAQ,EAAEA;EACZ,CAAC,CAAC;AACJ;AACA,eAAeZ,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}