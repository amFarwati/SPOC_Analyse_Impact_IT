{"ast":null,"code":"'use strict';\n\nconst EventEmitter = require('events');\nconst getStream = require('get-stream');\nconst is = require('@sindresorhus/is');\nconst PCancelable = require('p-cancelable');\nconst requestAsEventEmitter = require('./request-as-event-emitter');\nconst {\n  HTTPError,\n  ParseError,\n  ReadError\n} = require('./errors');\nconst {\n  options: mergeOptions\n} = require('./merge');\nconst {\n  reNormalize\n} = require('./normalize-arguments');\nconst asPromise = options => {\n  const proxy = new EventEmitter();\n  const promise = new PCancelable((resolve, reject, onCancel) => {\n    const emitter = requestAsEventEmitter(options);\n    onCancel(emitter.abort);\n    emitter.on('response', async response => {\n      proxy.emit('response', response);\n      const stream = is.null(options.encoding) ? getStream.buffer(response) : getStream(response, options);\n      let data;\n      try {\n        data = await stream;\n      } catch (error) {\n        reject(new ReadError(error, options));\n        return;\n      }\n      const limitStatusCode = options.followRedirect ? 299 : 399;\n      response.body = data;\n      try {\n        for (const [index, hook] of Object.entries(options.hooks.afterResponse)) {\n          // eslint-disable-next-line no-await-in-loop\n          response = await hook(response, updatedOptions => {\n            updatedOptions = reNormalize(mergeOptions(options, {\n              ...updatedOptions,\n              retry: 0,\n              throwHttpErrors: false\n            }));\n\n            // Remove any further hooks for that request, because we we'll call them anyway.\n            // The loop continues. We don't want duplicates (asPromise recursion).\n            updatedOptions.hooks.afterResponse = options.hooks.afterResponse.slice(0, index);\n            return asPromise(updatedOptions);\n          });\n        }\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      const {\n        statusCode\n      } = response;\n      if (options.json && response.body) {\n        try {\n          response.body = JSON.parse(response.body);\n        } catch (error) {\n          if (statusCode >= 200 && statusCode < 300) {\n            const parseError = new ParseError(error, statusCode, options, data);\n            Object.defineProperty(parseError, 'response', {\n              value: response\n            });\n            reject(parseError);\n            return;\n          }\n        }\n      }\n      if (statusCode !== 304 && (statusCode < 200 || statusCode > limitStatusCode)) {\n        const error = new HTTPError(response, options);\n        Object.defineProperty(error, 'response', {\n          value: response\n        });\n        if (emitter.retry(error) === false) {\n          if (options.throwHttpErrors) {\n            reject(error);\n            return;\n          }\n          resolve(response);\n        }\n        return;\n      }\n      resolve(response);\n    });\n    emitter.once('error', reject);\n    ['request', 'redirect', 'uploadProgress', 'downloadProgress'].forEach(event => emitter.on(event, (...args) => proxy.emit(event, ...args)));\n  });\n  promise.on = (name, fn) => {\n    proxy.on(name, fn);\n    return promise;\n  };\n  return promise;\n};\nmodule.exports = asPromise;","map":{"version":3,"names":["EventEmitter","require","getStream","is","PCancelable","requestAsEventEmitter","HTTPError","ParseError","ReadError","options","mergeOptions","reNormalize","asPromise","proxy","promise","resolve","reject","onCancel","emitter","abort","on","response","emit","stream","null","encoding","buffer","data","error","limitStatusCode","followRedirect","body","index","hook","Object","entries","hooks","afterResponse","updatedOptions","retry","throwHttpErrors","slice","statusCode","json","JSON","parse","parseError","defineProperty","value","once","forEach","event","args","name","fn","module","exports"],"sources":["/home/amfarwati/Documents/SPOC_Analyse_Impact_IT/v_0.1/client/node_modules/got/source/as-promise.js"],"sourcesContent":["'use strict';\nconst EventEmitter = require('events');\nconst getStream = require('get-stream');\nconst is = require('@sindresorhus/is');\nconst PCancelable = require('p-cancelable');\nconst requestAsEventEmitter = require('./request-as-event-emitter');\nconst {HTTPError, ParseError, ReadError} = require('./errors');\nconst {options: mergeOptions} = require('./merge');\nconst {reNormalize} = require('./normalize-arguments');\n\nconst asPromise = options => {\n\tconst proxy = new EventEmitter();\n\n\tconst promise = new PCancelable((resolve, reject, onCancel) => {\n\t\tconst emitter = requestAsEventEmitter(options);\n\n\t\tonCancel(emitter.abort);\n\n\t\temitter.on('response', async response => {\n\t\t\tproxy.emit('response', response);\n\n\t\t\tconst stream = is.null(options.encoding) ? getStream.buffer(response) : getStream(response, options);\n\n\t\t\tlet data;\n\t\t\ttry {\n\t\t\t\tdata = await stream;\n\t\t\t} catch (error) {\n\t\t\t\treject(new ReadError(error, options));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst limitStatusCode = options.followRedirect ? 299 : 399;\n\n\t\t\tresponse.body = data;\n\n\t\t\ttry {\n\t\t\t\tfor (const [index, hook] of Object.entries(options.hooks.afterResponse)) {\n\t\t\t\t\t// eslint-disable-next-line no-await-in-loop\n\t\t\t\t\tresponse = await hook(response, updatedOptions => {\n\t\t\t\t\t\tupdatedOptions = reNormalize(mergeOptions(options, {\n\t\t\t\t\t\t\t...updatedOptions,\n\t\t\t\t\t\t\tretry: 0,\n\t\t\t\t\t\t\tthrowHttpErrors: false\n\t\t\t\t\t\t}));\n\n\t\t\t\t\t\t// Remove any further hooks for that request, because we we'll call them anyway.\n\t\t\t\t\t\t// The loop continues. We don't want duplicates (asPromise recursion).\n\t\t\t\t\t\tupdatedOptions.hooks.afterResponse = options.hooks.afterResponse.slice(0, index);\n\n\t\t\t\t\t\treturn asPromise(updatedOptions);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\treject(error);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst {statusCode} = response;\n\n\t\t\tif (options.json && response.body) {\n\t\t\t\ttry {\n\t\t\t\t\tresponse.body = JSON.parse(response.body);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tif (statusCode >= 200 && statusCode < 300) {\n\t\t\t\t\t\tconst parseError = new ParseError(error, statusCode, options, data);\n\t\t\t\t\t\tObject.defineProperty(parseError, 'response', {value: response});\n\t\t\t\t\t\treject(parseError);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (statusCode !== 304 && (statusCode < 200 || statusCode > limitStatusCode)) {\n\t\t\t\tconst error = new HTTPError(response, options);\n\t\t\t\tObject.defineProperty(error, 'response', {value: response});\n\t\t\t\tif (emitter.retry(error) === false) {\n\t\t\t\t\tif (options.throwHttpErrors) {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve(response);\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tresolve(response);\n\t\t});\n\n\t\temitter.once('error', reject);\n\t\t[\n\t\t\t'request',\n\t\t\t'redirect',\n\t\t\t'uploadProgress',\n\t\t\t'downloadProgress'\n\t\t].forEach(event => emitter.on(event, (...args) => proxy.emit(event, ...args)));\n\t});\n\n\tpromise.on = (name, fn) => {\n\t\tproxy.on(name, fn);\n\t\treturn promise;\n\t};\n\n\treturn promise;\n};\n\nmodule.exports = asPromise;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}