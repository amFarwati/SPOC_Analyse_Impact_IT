{"ast":null,"code":"var _jsxFileName = \"/home/amfarwati/Documents/SPOC_Analyse_Impact_IT/v_0.0/client/src/components/InputFileUpload.js\",\n  _s = $RefreshSig$();\n/*import * as React from 'react';\nimport Button from '@mui/joy/Button';\nimport SvgIcon from '@mui/joy/SvgIcon';\nimport { styled } from '@mui/joy';\n\nconst VisuallyHiddenInput = styled('input')`\n  clip: rect(0 0 0 0);\n  clip-path: inset(50%);\n  height: 1px;\n  overflow: hidden;\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  white-space: nowrap;\n  width: 1px;\n`;\n\nexport default function InputFileUpload() {\n  return (\n    <Button\n        color=\"neutral\"\n        variant=\"solid\" \n        onClick={()=>{}}\n        component=\"label\"\n        role={undefined}\n        tabIndex={-1}\n        style={{\n            borderRadius: 30,\n            padding: \"18px 36px\",\n            fontSize: \"20px\"\n        }}\n      startDecorator={\n        <SvgIcon>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            strokeWidth={1.5}\n            stroke=\"currentColor\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              d=\"M12 16.5V9.75m0 0l3 3m-3-3l-3 3M6.75 19.5a4.5 4.5 0 01-1.41-8.775 5.25 5.25 0 0110.233-2.33 3 3 0 013.758 3.848A3.752 3.752 0 0118 19.5H6.75z\"\n            />\n          </svg>\n        </SvgIcon>\n      }\n    >\n      Upload a file\n      <VisuallyHiddenInput type=\"file\" onChange={(e)=>{console.log(e.target.files[0])}}/>\n    </Button>\n  );\n}*/\n\nimport React, { useState } from 'react';\nimport Papa from 'papaparse'; // Assurez-vous d'installer cette bibliothèque avec `npm install papaparse`\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CsvToJsonConverter() {\n  _s();\n  const [jsonContent, setJsonContent] = useState(null);\n  const handleFileUpload = event => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = e => {\n        const csvContent = e.target.result;\n        const results = Papa.parse(csvContent, {\n          header: true,\n          skipEmptyLines: true\n        });\n        setJsonContent(JSON.stringify(results.data, null, 2));\n      };\n      reader.readAsText(file);\n    }\n  };\n  const downloadJsonFile = () => {\n    if (jsonContent) {\n      const blob = new Blob([jsonContent], {\n        type: 'application/json'\n      });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = 'data.json';\n      document.body.appendChild(a);\n      a.click();\n      window.URL.revokeObjectURL(url);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Contenu JSON :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: jsonContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), jsonContent && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: downloadJsonFile,\n        children: \"T\\xE9l\\xE9charger JSON\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n_s(CsvToJsonConverter, \"HSomsI8jgNZbDYmysvcIVx2hXL4=\");\n_c = CsvToJsonConverter;\nexport default CsvToJsonConverter;\nvar _c;\n$RefreshReg$(_c, \"CsvToJsonConverter\");","map":{"version":3,"names":["React","useState","Papa","jsxDEV","_jsxDEV","CsvToJsonConverter","_s","jsonContent","setJsonContent","handleFileUpload","event","file","target","files","reader","FileReader","onload","e","csvContent","result","results","parse","header","skipEmptyLines","JSON","stringify","data","readAsText","downloadJsonFile","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","window","revokeObjectURL","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/amfarwati/Documents/SPOC_Analyse_Impact_IT/v_0.0/client/src/components/InputFileUpload.js"],"sourcesContent":["/*import * as React from 'react';\nimport Button from '@mui/joy/Button';\nimport SvgIcon from '@mui/joy/SvgIcon';\nimport { styled } from '@mui/joy';\n\nconst VisuallyHiddenInput = styled('input')`\n  clip: rect(0 0 0 0);\n  clip-path: inset(50%);\n  height: 1px;\n  overflow: hidden;\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  white-space: nowrap;\n  width: 1px;\n`;\n\nexport default function InputFileUpload() {\n  return (\n    <Button\n        color=\"neutral\"\n        variant=\"solid\" \n        onClick={()=>{}}\n        component=\"label\"\n        role={undefined}\n        tabIndex={-1}\n        style={{\n            borderRadius: 30,\n            padding: \"18px 36px\",\n            fontSize: \"20px\"\n        }}\n      startDecorator={\n        <SvgIcon>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            strokeWidth={1.5}\n            stroke=\"currentColor\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              d=\"M12 16.5V9.75m0 0l3 3m-3-3l-3 3M6.75 19.5a4.5 4.5 0 01-1.41-8.775 5.25 5.25 0 0110.233-2.33 3 3 0 013.758 3.848A3.752 3.752 0 0118 19.5H6.75z\"\n            />\n          </svg>\n        </SvgIcon>\n      }\n    >\n      Upload a file\n      <VisuallyHiddenInput type=\"file\" onChange={(e)=>{console.log(e.target.files[0])}}/>\n    </Button>\n  );\n}*/\n\nimport React, { useState } from 'react';\nimport Papa from 'papaparse'; // Assurez-vous d'installer cette bibliothèque avec `npm install papaparse`\n\nfunction CsvToJsonConverter() {\n  const [jsonContent, setJsonContent] = useState(null);\n\n  const handleFileUpload = (event) => {\n    const file = event.target.files[0];\n\n    if (file) {\n      const reader = new FileReader();\n\n      reader.onload = (e) => {\n        const csvContent = e.target.result;\n        const results = Papa.parse(csvContent, {\n          header: true,\n          skipEmptyLines: true,\n        });\n\n        setJsonContent(JSON.stringify(results.data, null, 2));\n      };\n\n      reader.readAsText(file);\n    }\n  };\n\n  const downloadJsonFile = () => {\n    if (jsonContent) {\n      const blob = new Blob([jsonContent], { type: 'application/json' });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = 'data.json';\n      document.body.appendChild(a);\n      a.click();\n      window.URL.revokeObjectURL(url);\n    }\n  };\n\n  return (\n    <div>\n      <input type=\"file\" onChange={handleFileUpload} />\n      <div>\n        <h2>Contenu JSON :</h2>\n        <pre>{jsonContent}</pre>\n        {jsonContent && <button onClick={downloadJsonFile}>Télécharger JSON</button>}\n      </div>\n    </div>\n  );\n}\n\nexport default CsvToJsonConverter;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}