{"ast":null,"code":"var _jsxFileName = \"/home/amfarwati/Documents/SPOC_Analyse_Impact_IT/v_0.1/client/src/components/ResultDisplay.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useContext, useEffect } from 'react';\nimport { User_Context } from '../pages/Dashboard';\nimport { API_Context } from '../pages/Dashboard';\nimport \"../styles/ResultDisplay.css\";\nimport { BarChart } from '@mui/x-charts/BarChart';\nimport got from 'got';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ResultDisplay() {\n  _s();\n  const userParc = useContext(User_Context)[0];\n  const login = useContext(User_Context)[2];\n  const [baseUrl] = useContext(API_Context);\n  var [ges, eau, terresRares] = [0, 0, 0];\n  useEffect(() => {\n    if (userParc !== null) {\n      /*\n      got.put({\n        url: `${baseUrl}/setInventory`,\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n            user: `${login}_test`,\n            inventory: userParc\n            })\n      })\n      .then((res)=>{console.log(res);})\n      .catch((error)=>{console.error('ERROR:', error)});\n       got(`${baseUrl}/getImpact/${login}_test`)\n      .then((res)=>{\n        console.log(res);\n        res.forEach((stat)=>{stat = parseFloat(stat)});\n        [ges,eau,terresRares]=res;\n      })\n      .catch((error)=>{console.error('ERROR:', error)});\n      */\n    }\n  }, [userParc]);\n\n  /*\n  console.log(\"totalCost \",totalCost);\n  console.log(\"ges \",ges);\n  console.log(\"eau \",eau);\n  console.log(\"terresRares \",terresRares);\n  */\n  let BD = {\n    xAxis: ['GES', 'EAU', 'Terres Rares'],\n    series: [{\n      data: ges\n    }, {\n      data: eau\n    }, {\n      data: terresRares\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"impactScore\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"graphics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"camemberts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"texts\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"GES : \", ges]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Eau : \", eau]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Terres rares : \", terresRares]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(ResultDisplay, \"kjDqLdQbZXKeLRlhcfsE9W5cs6A=\");\n_c = ResultDisplay;\nexport default ResultDisplay;\nvar _c;\n$RefreshReg$(_c, \"ResultDisplay\");","map":{"version":3,"names":["React","useContext","useEffect","User_Context","API_Context","BarChart","got","jsxDEV","_jsxDEV","ResultDisplay","_s","userParc","login","baseUrl","ges","eau","terresRares","BD","xAxis","series","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/amfarwati/Documents/SPOC_Analyse_Impact_IT/v_0.1/client/src/components/ResultDisplay.js"],"sourcesContent":["import React from 'react';\nimport { useContext, useEffect } from 'react';\nimport { User_Context } from '../pages/Dashboard';\nimport { API_Context } from '../pages/Dashboard';\nimport \"../styles/ResultDisplay.css\";\nimport { BarChart } from '@mui/x-charts/BarChart';\nimport got from 'got';\n\n\nfunction ResultDisplay() {\n\n  const userParc = useContext(User_Context)[0];\n  const login = useContext(User_Context)[2];\n  const [baseUrl] = useContext(API_Context);\n  var [ges,eau,terresRares] = [0,0,0];\n\n  useEffect(() => {\n    if (userParc!==null){\n      /*\n      got.put({\n        url: `${baseUrl}/setInventory`,\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n            user: `${login}_test`,\n            inventory: userParc\n            })\n      })\n      .then((res)=>{console.log(res);})\n      .catch((error)=>{console.error('ERROR:', error)});\n\n      got(`${baseUrl}/getImpact/${login}_test`)\n      .then((res)=>{\n        console.log(res);\n        res.forEach((stat)=>{stat = parseFloat(stat)});\n        [ges,eau,terresRares]=res;\n      })\n      .catch((error)=>{console.error('ERROR:', error)});\n      */\n    }\n  },[userParc]);\n\n  /*\n  console.log(\"totalCost \",totalCost);\n  console.log(\"ges \",ges);\n  console.log(\"eau \",eau);\n  console.log(\"terresRares \",terresRares);\n  */\n  let BD = {xAxis:['GES','EAU','Terres Rares'],series:[{data:ges},{data:eau},{data:terresRares}]};\n\n  return (\n    <div className='impactScore'>\n      <div className='graphics'>\n      </div>\n      <div className='camemberts'>\n      </div>\n      <div className='texts'>\n        <li>GES : {ges}</li>\n        <li>Eau : {eau}</li>\n        <li>Terres rares : {terresRares}</li>      \n      </div>\n    </div>\n  )\n}\n\nexport default ResultDisplay\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC7C,SAASC,YAAY,QAAQ,oBAAoB;AACjD,SAASC,WAAW,QAAQ,oBAAoB;AAChD,OAAO,6BAA6B;AACpC,SAASC,QAAQ,QAAQ,wBAAwB;AACjD,OAAOC,GAAG,MAAM,KAAK;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGtB,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EAEvB,MAAMC,QAAQ,GAAGV,UAAU,CAACE,YAAY,CAAC,CAAC,CAAC,CAAC;EAC5C,MAAMS,KAAK,GAAGX,UAAU,CAACE,YAAY,CAAC,CAAC,CAAC,CAAC;EACzC,MAAM,CAACU,OAAO,CAAC,GAAGZ,UAAU,CAACG,WAAW,CAAC;EACzC,IAAI,CAACU,GAAG,EAACC,GAAG,EAACC,WAAW,CAAC,GAAG,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;EAEnCd,SAAS,CAAC,MAAM;IACd,IAAIS,QAAQ,KAAG,IAAI,EAAC;MAClB;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAlBM;EAqBJ,CAAC,EAAC,CAACA,QAAQ,CAAC,CAAC;;EAEb;AACF;AACA;AACA;AACA;AACA;EACE,IAAIM,EAAE,GAAG;IAACC,KAAK,EAAC,CAAC,KAAK,EAAC,KAAK,EAAC,cAAc,CAAC;IAACC,MAAM,EAAC,CAAC;MAACC,IAAI,EAACN;IAAG,CAAC,EAAC;MAACM,IAAI,EAACL;IAAG,CAAC,EAAC;MAACK,IAAI,EAACJ;IAAW,CAAC;EAAC,CAAC;EAE/F,oBACER,OAAA;IAAKa,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAC1Bd,OAAA;MAAKa,SAAS,EAAC;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC,eACNlB,OAAA;MAAKa,SAAS,EAAC;IAAY;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CAAC,eACNlB,OAAA;MAAKa,SAAS,EAAC,OAAO;MAAAC,QAAA,gBACpBd,OAAA;QAAAc,QAAA,GAAI,QAAM,EAACR,GAAG;MAAA;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACpBlB,OAAA;QAAAc,QAAA,GAAI,QAAM,EAACP,GAAG;MAAA;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACpBlB,OAAA;QAAAc,QAAA,GAAI,iBAAe,EAACN,WAAW;MAAA;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAChB,EAAA,CArDQD,aAAa;AAAAkB,EAAA,GAAblB,aAAa;AAuDtB,eAAeA,aAAa;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}