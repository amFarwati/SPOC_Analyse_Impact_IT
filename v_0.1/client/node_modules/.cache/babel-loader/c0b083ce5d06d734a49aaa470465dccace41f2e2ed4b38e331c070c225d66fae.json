{"ast":null,"code":"'use strict';\n\nconst EventEmitter = require('events');\nconst urlLib = require('url');\nconst normalizeUrl = require('normalize-url');\nconst getStream = require('get-stream');\nconst CachePolicy = require('http-cache-semantics');\nconst Response = require('responselike');\nconst lowercaseKeys = require('lowercase-keys');\nconst cloneResponse = require('clone-response');\nconst Keyv = require('keyv');\nclass CacheableRequest {\n  constructor(request, cacheAdapter) {\n    if (typeof request !== 'function') {\n      throw new TypeError('Parameter `request` must be a function');\n    }\n    this.cache = new Keyv({\n      uri: typeof cacheAdapter === 'string' && cacheAdapter,\n      store: typeof cacheAdapter !== 'string' && cacheAdapter,\n      namespace: 'cacheable-request'\n    });\n    return this.createCacheableRequest(request);\n  }\n  createCacheableRequest(request) {\n    return (opts, cb) => {\n      let url;\n      if (typeof opts === 'string') {\n        url = normalizeUrlObject(urlLib.parse(opts));\n        opts = {};\n      } else if (opts instanceof urlLib.URL) {\n        url = normalizeUrlObject(urlLib.parse(opts.toString()));\n        opts = {};\n      } else {\n        const [pathname, ...searchParts] = (opts.path || '').split('?');\n        const search = searchParts.length > 0 ? `?${searchParts.join('?')}` : '';\n        url = normalizeUrlObject({\n          ...opts,\n          pathname,\n          search\n        });\n      }\n      opts = {\n        headers: {},\n        method: 'GET',\n        cache: true,\n        strictTtl: false,\n        automaticFailover: false,\n        ...opts,\n        ...urlObjectToRequestOptions(url)\n      };\n      opts.headers = lowercaseKeys(opts.headers);\n      const ee = new EventEmitter();\n      const normalizedUrlString = normalizeUrl(urlLib.format(url), {\n        stripWWW: false,\n        removeTrailingSlash: false,\n        stripAuthentication: false\n      });\n      const key = `${opts.method}:${normalizedUrlString}`;\n      let revalidate = false;\n      let madeRequest = false;\n      const makeRequest = opts => {\n        madeRequest = true;\n        let requestErrored = false;\n        let requestErrorCallback;\n        const requestErrorPromise = new Promise(resolve => {\n          requestErrorCallback = () => {\n            if (!requestErrored) {\n              requestErrored = true;\n              resolve();\n            }\n          };\n        });\n        const handler = response => {\n          if (revalidate && !opts.forceRefresh) {\n            response.status = response.statusCode;\n            const revalidatedPolicy = CachePolicy.fromObject(revalidate.cachePolicy).revalidatedPolicy(opts, response);\n            if (!revalidatedPolicy.modified) {\n              const headers = revalidatedPolicy.policy.responseHeaders();\n              response = new Response(revalidate.statusCode, headers, revalidate.body, revalidate.url);\n              response.cachePolicy = revalidatedPolicy.policy;\n              response.fromCache = true;\n            }\n          }\n          if (!response.fromCache) {\n            response.cachePolicy = new CachePolicy(opts, response, opts);\n            response.fromCache = false;\n          }\n          let clonedResponse;\n          if (opts.cache && response.cachePolicy.storable()) {\n            clonedResponse = cloneResponse(response);\n            (async () => {\n              try {\n                const bodyPromise = getStream.buffer(response);\n                await Promise.race([requestErrorPromise, new Promise(resolve => response.once('end', resolve))]);\n                if (requestErrored) {\n                  return;\n                }\n                const body = await bodyPromise;\n                const value = {\n                  cachePolicy: response.cachePolicy.toObject(),\n                  url: response.url,\n                  statusCode: response.fromCache ? revalidate.statusCode : response.statusCode,\n                  body\n                };\n                let ttl = opts.strictTtl ? response.cachePolicy.timeToLive() : undefined;\n                if (opts.maxTtl) {\n                  ttl = ttl ? Math.min(ttl, opts.maxTtl) : opts.maxTtl;\n                }\n                await this.cache.set(key, value, ttl);\n              } catch (error) {\n                ee.emit('error', new CacheableRequest.CacheError(error));\n              }\n            })();\n          } else if (opts.cache && revalidate) {\n            (async () => {\n              try {\n                await this.cache.delete(key);\n              } catch (error) {\n                ee.emit('error', new CacheableRequest.CacheError(error));\n              }\n            })();\n          }\n          ee.emit('response', clonedResponse || response);\n          if (typeof cb === 'function') {\n            cb(clonedResponse || response);\n          }\n        };\n        try {\n          const req = request(opts, handler);\n          req.once('error', requestErrorCallback);\n          req.once('abort', requestErrorCallback);\n          ee.emit('request', req);\n        } catch (error) {\n          ee.emit('error', new CacheableRequest.RequestError(error));\n        }\n      };\n      (async () => {\n        const get = async opts => {\n          await Promise.resolve();\n          const cacheEntry = opts.cache ? await this.cache.get(key) : undefined;\n          if (typeof cacheEntry === 'undefined') {\n            return makeRequest(opts);\n          }\n          const policy = CachePolicy.fromObject(cacheEntry.cachePolicy);\n          if (policy.satisfiesWithoutRevalidation(opts) && !opts.forceRefresh) {\n            const headers = policy.responseHeaders();\n            const response = new Response(cacheEntry.statusCode, headers, cacheEntry.body, cacheEntry.url);\n            response.cachePolicy = policy;\n            response.fromCache = true;\n            ee.emit('response', response);\n            if (typeof cb === 'function') {\n              cb(response);\n            }\n          } else {\n            revalidate = cacheEntry;\n            opts.headers = policy.revalidationHeaders(opts);\n            makeRequest(opts);\n          }\n        };\n        const errorHandler = error => ee.emit('error', new CacheableRequest.CacheError(error));\n        this.cache.once('error', errorHandler);\n        ee.on('response', () => this.cache.removeListener('error', errorHandler));\n        try {\n          await get(opts);\n        } catch (error) {\n          if (opts.automaticFailover && !madeRequest) {\n            makeRequest(opts);\n          }\n          ee.emit('error', new CacheableRequest.CacheError(error));\n        }\n      })();\n      return ee;\n    };\n  }\n}\nfunction urlObjectToRequestOptions(url) {\n  const options = {\n    ...url\n  };\n  options.path = `${url.pathname || '/'}${url.search || ''}`;\n  delete options.pathname;\n  delete options.search;\n  return options;\n}\nfunction normalizeUrlObject(url) {\n  // If url was parsed by url.parse or new URL:\n  // - hostname will be set\n  // - host will be hostname[:port]\n  // - port will be set if it was explicit in the parsed string\n  // Otherwise, url was from request options:\n  // - hostname or host may be set\n  // - host shall not have port encoded\n  return {\n    protocol: url.protocol,\n    auth: url.auth,\n    hostname: url.hostname || url.host || 'localhost',\n    port: url.port,\n    pathname: url.pathname,\n    search: url.search\n  };\n}\nCacheableRequest.RequestError = class extends Error {\n  constructor(error) {\n    super(error.message);\n    this.name = 'RequestError';\n    Object.assign(this, error);\n  }\n};\nCacheableRequest.CacheError = class extends Error {\n  constructor(error) {\n    super(error.message);\n    this.name = 'CacheError';\n    Object.assign(this, error);\n  }\n};\nmodule.exports = CacheableRequest;","map":{"version":3,"names":["EventEmitter","require","urlLib","normalizeUrl","getStream","CachePolicy","Response","lowercaseKeys","cloneResponse","Keyv","CacheableRequest","constructor","request","cacheAdapter","TypeError","cache","uri","store","namespace","createCacheableRequest","opts","cb","url","normalizeUrlObject","parse","URL","toString","pathname","searchParts","path","split","search","length","join","headers","method","strictTtl","automaticFailover","urlObjectToRequestOptions","ee","normalizedUrlString","format","stripWWW","removeTrailingSlash","stripAuthentication","key","revalidate","madeRequest","makeRequest","requestErrored","requestErrorCallback","requestErrorPromise","Promise","resolve","handler","response","forceRefresh","status","statusCode","revalidatedPolicy","fromObject","cachePolicy","modified","policy","responseHeaders","body","fromCache","clonedResponse","storable","bodyPromise","buffer","race","once","value","toObject","ttl","timeToLive","undefined","maxTtl","Math","min","set","error","emit","CacheError","delete","req","RequestError","get","cacheEntry","satisfiesWithoutRevalidation","revalidationHeaders","errorHandler","on","removeListener","options","protocol","auth","hostname","host","port","Error","message","name","Object","assign","module","exports"],"sources":["/home/amfarwati/Documents/SPOC_Analyse_Impact_IT/v_0.1/client/node_modules/cacheable-request/src/index.js"],"sourcesContent":["'use strict';\n\nconst EventEmitter = require('events');\nconst urlLib = require('url');\nconst normalizeUrl = require('normalize-url');\nconst getStream = require('get-stream');\nconst CachePolicy = require('http-cache-semantics');\nconst Response = require('responselike');\nconst lowercaseKeys = require('lowercase-keys');\nconst cloneResponse = require('clone-response');\nconst Keyv = require('keyv');\n\nclass CacheableRequest {\n\tconstructor(request, cacheAdapter) {\n\t\tif (typeof request !== 'function') {\n\t\t\tthrow new TypeError('Parameter `request` must be a function');\n\t\t}\n\n\t\tthis.cache = new Keyv({\n\t\t\turi: typeof cacheAdapter === 'string' && cacheAdapter,\n\t\t\tstore: typeof cacheAdapter !== 'string' && cacheAdapter,\n\t\t\tnamespace: 'cacheable-request'\n\t\t});\n\n\t\treturn this.createCacheableRequest(request);\n\t}\n\n\tcreateCacheableRequest(request) {\n\t\treturn (opts, cb) => {\n\t\t\tlet url;\n\t\t\tif (typeof opts === 'string') {\n\t\t\t\turl = normalizeUrlObject(urlLib.parse(opts));\n\t\t\t\topts = {};\n\t\t\t} else if (opts instanceof urlLib.URL) {\n\t\t\t\turl = normalizeUrlObject(urlLib.parse(opts.toString()));\n\t\t\t\topts = {};\n\t\t\t} else {\n\t\t\t\tconst [pathname, ...searchParts] = (opts.path || '').split('?');\n\t\t\t\tconst search = searchParts.length > 0 ?\n\t\t\t\t\t`?${searchParts.join('?')}` :\n\t\t\t\t\t'';\n\t\t\t\turl = normalizeUrlObject({ ...opts, pathname, search });\n\t\t\t}\n\n\t\t\topts = {\n\t\t\t\theaders: {},\n\t\t\t\tmethod: 'GET',\n\t\t\t\tcache: true,\n\t\t\t\tstrictTtl: false,\n\t\t\t\tautomaticFailover: false,\n\t\t\t\t...opts,\n\t\t\t\t...urlObjectToRequestOptions(url)\n\t\t\t};\n\t\t\topts.headers = lowercaseKeys(opts.headers);\n\n\t\t\tconst ee = new EventEmitter();\n\t\t\tconst normalizedUrlString = normalizeUrl(\n\t\t\t\turlLib.format(url),\n\t\t\t\t{\n\t\t\t\t\tstripWWW: false,\n\t\t\t\t\tremoveTrailingSlash: false,\n\t\t\t\t\tstripAuthentication: false\n\t\t\t\t}\n\t\t\t);\n\t\t\tconst key = `${opts.method}:${normalizedUrlString}`;\n\t\t\tlet revalidate = false;\n\t\t\tlet madeRequest = false;\n\n\t\t\tconst makeRequest = opts => {\n\t\t\t\tmadeRequest = true;\n\t\t\t\tlet requestErrored = false;\n\t\t\t\tlet requestErrorCallback;\n\n\t\t\t\tconst requestErrorPromise = new Promise(resolve => {\n\t\t\t\t\trequestErrorCallback = () => {\n\t\t\t\t\t\tif (!requestErrored) {\n\t\t\t\t\t\t\trequestErrored = true;\n\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\t\tconst handler = response => {\n\t\t\t\t\tif (revalidate && !opts.forceRefresh) {\n\t\t\t\t\t\tresponse.status = response.statusCode;\n\t\t\t\t\t\tconst revalidatedPolicy = CachePolicy.fromObject(revalidate.cachePolicy).revalidatedPolicy(opts, response);\n\t\t\t\t\t\tif (!revalidatedPolicy.modified) {\n\t\t\t\t\t\t\tconst headers = revalidatedPolicy.policy.responseHeaders();\n\t\t\t\t\t\t\tresponse = new Response(revalidate.statusCode, headers, revalidate.body, revalidate.url);\n\t\t\t\t\t\t\tresponse.cachePolicy = revalidatedPolicy.policy;\n\t\t\t\t\t\t\tresponse.fromCache = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!response.fromCache) {\n\t\t\t\t\t\tresponse.cachePolicy = new CachePolicy(opts, response, opts);\n\t\t\t\t\t\tresponse.fromCache = false;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet clonedResponse;\n\t\t\t\t\tif (opts.cache && response.cachePolicy.storable()) {\n\t\t\t\t\t\tclonedResponse = cloneResponse(response);\n\n\t\t\t\t\t\t(async () => {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tconst bodyPromise = getStream.buffer(response);\n\n\t\t\t\t\t\t\t\tawait Promise.race([\n\t\t\t\t\t\t\t\t\trequestErrorPromise,\n\t\t\t\t\t\t\t\t\tnew Promise(resolve => response.once('end', resolve))\n\t\t\t\t\t\t\t\t]);\n\n\t\t\t\t\t\t\t\tif (requestErrored) {\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tconst body = await bodyPromise;\n\n\t\t\t\t\t\t\t\tconst value = {\n\t\t\t\t\t\t\t\t\tcachePolicy: response.cachePolicy.toObject(),\n\t\t\t\t\t\t\t\t\turl: response.url,\n\t\t\t\t\t\t\t\t\tstatusCode: response.fromCache ? revalidate.statusCode : response.statusCode,\n\t\t\t\t\t\t\t\t\tbody\n\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\tlet ttl = opts.strictTtl ? response.cachePolicy.timeToLive() : undefined;\n\t\t\t\t\t\t\t\tif (opts.maxTtl) {\n\t\t\t\t\t\t\t\t\tttl = ttl ? Math.min(ttl, opts.maxTtl) : opts.maxTtl;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tawait this.cache.set(key, value, ttl);\n\t\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\t\tee.emit('error', new CacheableRequest.CacheError(error));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})();\n\t\t\t\t\t} else if (opts.cache && revalidate) {\n\t\t\t\t\t\t(async () => {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tawait this.cache.delete(key);\n\t\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\t\tee.emit('error', new CacheableRequest.CacheError(error));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})();\n\t\t\t\t\t}\n\n\t\t\t\t\tee.emit('response', clonedResponse || response);\n\t\t\t\t\tif (typeof cb === 'function') {\n\t\t\t\t\t\tcb(clonedResponse || response);\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\ttry {\n\t\t\t\t\tconst req = request(opts, handler);\n\t\t\t\t\treq.once('error', requestErrorCallback);\n\t\t\t\t\treq.once('abort', requestErrorCallback);\n\t\t\t\t\tee.emit('request', req);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tee.emit('error', new CacheableRequest.RequestError(error));\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t(async () => {\n\t\t\t\tconst get = async opts => {\n\t\t\t\t\tawait Promise.resolve();\n\n\t\t\t\t\tconst cacheEntry = opts.cache ? await this.cache.get(key) : undefined;\n\t\t\t\t\tif (typeof cacheEntry === 'undefined') {\n\t\t\t\t\t\treturn makeRequest(opts);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst policy = CachePolicy.fromObject(cacheEntry.cachePolicy);\n\t\t\t\t\tif (policy.satisfiesWithoutRevalidation(opts) && !opts.forceRefresh) {\n\t\t\t\t\t\tconst headers = policy.responseHeaders();\n\t\t\t\t\t\tconst response = new Response(cacheEntry.statusCode, headers, cacheEntry.body, cacheEntry.url);\n\t\t\t\t\t\tresponse.cachePolicy = policy;\n\t\t\t\t\t\tresponse.fromCache = true;\n\n\t\t\t\t\t\tee.emit('response', response);\n\t\t\t\t\t\tif (typeof cb === 'function') {\n\t\t\t\t\t\t\tcb(response);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\trevalidate = cacheEntry;\n\t\t\t\t\t\topts.headers = policy.revalidationHeaders(opts);\n\t\t\t\t\t\tmakeRequest(opts);\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tconst errorHandler = error => ee.emit('error', new CacheableRequest.CacheError(error));\n\t\t\t\tthis.cache.once('error', errorHandler);\n\t\t\t\tee.on('response', () => this.cache.removeListener('error', errorHandler));\n\n\t\t\t\ttry {\n\t\t\t\t\tawait get(opts);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tif (opts.automaticFailover && !madeRequest) {\n\t\t\t\t\t\tmakeRequest(opts);\n\t\t\t\t\t}\n\n\t\t\t\t\tee.emit('error', new CacheableRequest.CacheError(error));\n\t\t\t\t}\n\t\t\t})();\n\n\t\t\treturn ee;\n\t\t};\n\t}\n}\n\nfunction urlObjectToRequestOptions(url) {\n\tconst options = { ...url };\n\toptions.path = `${url.pathname || '/'}${url.search || ''}`;\n\tdelete options.pathname;\n\tdelete options.search;\n\treturn options;\n}\n\nfunction normalizeUrlObject(url) {\n\t// If url was parsed by url.parse or new URL:\n\t// - hostname will be set\n\t// - host will be hostname[:port]\n\t// - port will be set if it was explicit in the parsed string\n\t// Otherwise, url was from request options:\n\t// - hostname or host may be set\n\t// - host shall not have port encoded\n\treturn {\n\t\tprotocol: url.protocol,\n\t\tauth: url.auth,\n\t\thostname: url.hostname || url.host || 'localhost',\n\t\tport: url.port,\n\t\tpathname: url.pathname,\n\t\tsearch: url.search\n\t};\n}\n\nCacheableRequest.RequestError = class extends Error {\n\tconstructor(error) {\n\t\tsuper(error.message);\n\t\tthis.name = 'RequestError';\n\t\tObject.assign(this, error);\n\t}\n};\n\nCacheableRequest.CacheError = class extends Error {\n\tconstructor(error) {\n\t\tsuper(error.message);\n\t\tthis.name = 'CacheError';\n\t\tObject.assign(this, error);\n\t}\n};\n\nmodule.exports = CacheableRequest;\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,YAAY,GAAGC,OAAO,CAAC,QAAQ,CAAC;AACtC,MAAMC,MAAM,GAAGD,OAAO,CAAC,KAAK,CAAC;AAC7B,MAAME,YAAY,GAAGF,OAAO,CAAC,eAAe,CAAC;AAC7C,MAAMG,SAAS,GAAGH,OAAO,CAAC,YAAY,CAAC;AACvC,MAAMI,WAAW,GAAGJ,OAAO,CAAC,sBAAsB,CAAC;AACnD,MAAMK,QAAQ,GAAGL,OAAO,CAAC,cAAc,CAAC;AACxC,MAAMM,aAAa,GAAGN,OAAO,CAAC,gBAAgB,CAAC;AAC/C,MAAMO,aAAa,GAAGP,OAAO,CAAC,gBAAgB,CAAC;AAC/C,MAAMQ,IAAI,GAAGR,OAAO,CAAC,MAAM,CAAC;AAE5B,MAAMS,gBAAgB,CAAC;EACtBC,WAAWA,CAACC,OAAO,EAAEC,YAAY,EAAE;IAClC,IAAI,OAAOD,OAAO,KAAK,UAAU,EAAE;MAClC,MAAM,IAAIE,SAAS,CAAC,wCAAwC,CAAC;IAC9D;IAEA,IAAI,CAACC,KAAK,GAAG,IAAIN,IAAI,CAAC;MACrBO,GAAG,EAAE,OAAOH,YAAY,KAAK,QAAQ,IAAIA,YAAY;MACrDI,KAAK,EAAE,OAAOJ,YAAY,KAAK,QAAQ,IAAIA,YAAY;MACvDK,SAAS,EAAE;IACZ,CAAC,CAAC;IAEF,OAAO,IAAI,CAACC,sBAAsB,CAACP,OAAO,CAAC;EAC5C;EAEAO,sBAAsBA,CAACP,OAAO,EAAE;IAC/B,OAAO,CAACQ,IAAI,EAAEC,EAAE,KAAK;MACpB,IAAIC,GAAG;MACP,IAAI,OAAOF,IAAI,KAAK,QAAQ,EAAE;QAC7BE,GAAG,GAAGC,kBAAkB,CAACrB,MAAM,CAACsB,KAAK,CAACJ,IAAI,CAAC,CAAC;QAC5CA,IAAI,GAAG,CAAC,CAAC;MACV,CAAC,MAAM,IAAIA,IAAI,YAAYlB,MAAM,CAACuB,GAAG,EAAE;QACtCH,GAAG,GAAGC,kBAAkB,CAACrB,MAAM,CAACsB,KAAK,CAACJ,IAAI,CAACM,QAAQ,CAAC,CAAC,CAAC,CAAC;QACvDN,IAAI,GAAG,CAAC,CAAC;MACV,CAAC,MAAM;QACN,MAAM,CAACO,QAAQ,EAAE,GAAGC,WAAW,CAAC,GAAG,CAACR,IAAI,CAACS,IAAI,IAAI,EAAE,EAAEC,KAAK,CAAC,GAAG,CAAC;QAC/D,MAAMC,MAAM,GAAGH,WAAW,CAACI,MAAM,GAAG,CAAC,GACnC,IAAGJ,WAAW,CAACK,IAAI,CAAC,GAAG,CAAE,EAAC,GAC3B,EAAE;QACHX,GAAG,GAAGC,kBAAkB,CAAC;UAAE,GAAGH,IAAI;UAAEO,QAAQ;UAAEI;QAAO,CAAC,CAAC;MACxD;MAEAX,IAAI,GAAG;QACNc,OAAO,EAAE,CAAC,CAAC;QACXC,MAAM,EAAE,KAAK;QACbpB,KAAK,EAAE,IAAI;QACXqB,SAAS,EAAE,KAAK;QAChBC,iBAAiB,EAAE,KAAK;QACxB,GAAGjB,IAAI;QACP,GAAGkB,yBAAyB,CAAChB,GAAG;MACjC,CAAC;MACDF,IAAI,CAACc,OAAO,GAAG3B,aAAa,CAACa,IAAI,CAACc,OAAO,CAAC;MAE1C,MAAMK,EAAE,GAAG,IAAIvC,YAAY,CAAC,CAAC;MAC7B,MAAMwC,mBAAmB,GAAGrC,YAAY,CACvCD,MAAM,CAACuC,MAAM,CAACnB,GAAG,CAAC,EAClB;QACCoB,QAAQ,EAAE,KAAK;QACfC,mBAAmB,EAAE,KAAK;QAC1BC,mBAAmB,EAAE;MACtB,CACD,CAAC;MACD,MAAMC,GAAG,GAAI,GAAEzB,IAAI,CAACe,MAAO,IAAGK,mBAAoB,EAAC;MACnD,IAAIM,UAAU,GAAG,KAAK;MACtB,IAAIC,WAAW,GAAG,KAAK;MAEvB,MAAMC,WAAW,GAAG5B,IAAI,IAAI;QAC3B2B,WAAW,GAAG,IAAI;QAClB,IAAIE,cAAc,GAAG,KAAK;QAC1B,IAAIC,oBAAoB;QAExB,MAAMC,mBAAmB,GAAG,IAAIC,OAAO,CAACC,OAAO,IAAI;UAClDH,oBAAoB,GAAGA,CAAA,KAAM;YAC5B,IAAI,CAACD,cAAc,EAAE;cACpBA,cAAc,GAAG,IAAI;cACrBI,OAAO,CAAC,CAAC;YACV;UACD,CAAC;QACF,CAAC,CAAC;QAEF,MAAMC,OAAO,GAAGC,QAAQ,IAAI;UAC3B,IAAIT,UAAU,IAAI,CAAC1B,IAAI,CAACoC,YAAY,EAAE;YACrCD,QAAQ,CAACE,MAAM,GAAGF,QAAQ,CAACG,UAAU;YACrC,MAAMC,iBAAiB,GAAGtD,WAAW,CAACuD,UAAU,CAACd,UAAU,CAACe,WAAW,CAAC,CAACF,iBAAiB,CAACvC,IAAI,EAAEmC,QAAQ,CAAC;YAC1G,IAAI,CAACI,iBAAiB,CAACG,QAAQ,EAAE;cAChC,MAAM5B,OAAO,GAAGyB,iBAAiB,CAACI,MAAM,CAACC,eAAe,CAAC,CAAC;cAC1DT,QAAQ,GAAG,IAAIjD,QAAQ,CAACwC,UAAU,CAACY,UAAU,EAAExB,OAAO,EAAEY,UAAU,CAACmB,IAAI,EAAEnB,UAAU,CAACxB,GAAG,CAAC;cACxFiC,QAAQ,CAACM,WAAW,GAAGF,iBAAiB,CAACI,MAAM;cAC/CR,QAAQ,CAACW,SAAS,GAAG,IAAI;YAC1B;UACD;UAEA,IAAI,CAACX,QAAQ,CAACW,SAAS,EAAE;YACxBX,QAAQ,CAACM,WAAW,GAAG,IAAIxD,WAAW,CAACe,IAAI,EAAEmC,QAAQ,EAAEnC,IAAI,CAAC;YAC5DmC,QAAQ,CAACW,SAAS,GAAG,KAAK;UAC3B;UAEA,IAAIC,cAAc;UAClB,IAAI/C,IAAI,CAACL,KAAK,IAAIwC,QAAQ,CAACM,WAAW,CAACO,QAAQ,CAAC,CAAC,EAAE;YAClDD,cAAc,GAAG3D,aAAa,CAAC+C,QAAQ,CAAC;YAExC,CAAC,YAAY;cACZ,IAAI;gBACH,MAAMc,WAAW,GAAGjE,SAAS,CAACkE,MAAM,CAACf,QAAQ,CAAC;gBAE9C,MAAMH,OAAO,CAACmB,IAAI,CAAC,CAClBpB,mBAAmB,EACnB,IAAIC,OAAO,CAACC,OAAO,IAAIE,QAAQ,CAACiB,IAAI,CAAC,KAAK,EAAEnB,OAAO,CAAC,CAAC,CACrD,CAAC;gBAEF,IAAIJ,cAAc,EAAE;kBACnB;gBACD;gBAEA,MAAMgB,IAAI,GAAG,MAAMI,WAAW;gBAE9B,MAAMI,KAAK,GAAG;kBACbZ,WAAW,EAAEN,QAAQ,CAACM,WAAW,CAACa,QAAQ,CAAC,CAAC;kBAC5CpD,GAAG,EAAEiC,QAAQ,CAACjC,GAAG;kBACjBoC,UAAU,EAAEH,QAAQ,CAACW,SAAS,GAAGpB,UAAU,CAACY,UAAU,GAAGH,QAAQ,CAACG,UAAU;kBAC5EO;gBACD,CAAC;gBAED,IAAIU,GAAG,GAAGvD,IAAI,CAACgB,SAAS,GAAGmB,QAAQ,CAACM,WAAW,CAACe,UAAU,CAAC,CAAC,GAAGC,SAAS;gBACxE,IAAIzD,IAAI,CAAC0D,MAAM,EAAE;kBAChBH,GAAG,GAAGA,GAAG,GAAGI,IAAI,CAACC,GAAG,CAACL,GAAG,EAAEvD,IAAI,CAAC0D,MAAM,CAAC,GAAG1D,IAAI,CAAC0D,MAAM;gBACrD;gBAEA,MAAM,IAAI,CAAC/D,KAAK,CAACkE,GAAG,CAACpC,GAAG,EAAE4B,KAAK,EAAEE,GAAG,CAAC;cACtC,CAAC,CAAC,OAAOO,KAAK,EAAE;gBACf3C,EAAE,CAAC4C,IAAI,CAAC,OAAO,EAAE,IAAIzE,gBAAgB,CAAC0E,UAAU,CAACF,KAAK,CAAC,CAAC;cACzD;YACD,CAAC,EAAE,CAAC;UACL,CAAC,MAAM,IAAI9D,IAAI,CAACL,KAAK,IAAI+B,UAAU,EAAE;YACpC,CAAC,YAAY;cACZ,IAAI;gBACH,MAAM,IAAI,CAAC/B,KAAK,CAACsE,MAAM,CAACxC,GAAG,CAAC;cAC7B,CAAC,CAAC,OAAOqC,KAAK,EAAE;gBACf3C,EAAE,CAAC4C,IAAI,CAAC,OAAO,EAAE,IAAIzE,gBAAgB,CAAC0E,UAAU,CAACF,KAAK,CAAC,CAAC;cACzD;YACD,CAAC,EAAE,CAAC;UACL;UAEA3C,EAAE,CAAC4C,IAAI,CAAC,UAAU,EAAEhB,cAAc,IAAIZ,QAAQ,CAAC;UAC/C,IAAI,OAAOlC,EAAE,KAAK,UAAU,EAAE;YAC7BA,EAAE,CAAC8C,cAAc,IAAIZ,QAAQ,CAAC;UAC/B;QACD,CAAC;QAED,IAAI;UACH,MAAM+B,GAAG,GAAG1E,OAAO,CAACQ,IAAI,EAAEkC,OAAO,CAAC;UAClCgC,GAAG,CAACd,IAAI,CAAC,OAAO,EAAEtB,oBAAoB,CAAC;UACvCoC,GAAG,CAACd,IAAI,CAAC,OAAO,EAAEtB,oBAAoB,CAAC;UACvCX,EAAE,CAAC4C,IAAI,CAAC,SAAS,EAAEG,GAAG,CAAC;QACxB,CAAC,CAAC,OAAOJ,KAAK,EAAE;UACf3C,EAAE,CAAC4C,IAAI,CAAC,OAAO,EAAE,IAAIzE,gBAAgB,CAAC6E,YAAY,CAACL,KAAK,CAAC,CAAC;QAC3D;MACD,CAAC;MAED,CAAC,YAAY;QACZ,MAAMM,GAAG,GAAG,MAAMpE,IAAI,IAAI;UACzB,MAAMgC,OAAO,CAACC,OAAO,CAAC,CAAC;UAEvB,MAAMoC,UAAU,GAAGrE,IAAI,CAACL,KAAK,GAAG,MAAM,IAAI,CAACA,KAAK,CAACyE,GAAG,CAAC3C,GAAG,CAAC,GAAGgC,SAAS;UACrE,IAAI,OAAOY,UAAU,KAAK,WAAW,EAAE;YACtC,OAAOzC,WAAW,CAAC5B,IAAI,CAAC;UACzB;UAEA,MAAM2C,MAAM,GAAG1D,WAAW,CAACuD,UAAU,CAAC6B,UAAU,CAAC5B,WAAW,CAAC;UAC7D,IAAIE,MAAM,CAAC2B,4BAA4B,CAACtE,IAAI,CAAC,IAAI,CAACA,IAAI,CAACoC,YAAY,EAAE;YACpE,MAAMtB,OAAO,GAAG6B,MAAM,CAACC,eAAe,CAAC,CAAC;YACxC,MAAMT,QAAQ,GAAG,IAAIjD,QAAQ,CAACmF,UAAU,CAAC/B,UAAU,EAAExB,OAAO,EAAEuD,UAAU,CAACxB,IAAI,EAAEwB,UAAU,CAACnE,GAAG,CAAC;YAC9FiC,QAAQ,CAACM,WAAW,GAAGE,MAAM;YAC7BR,QAAQ,CAACW,SAAS,GAAG,IAAI;YAEzB3B,EAAE,CAAC4C,IAAI,CAAC,UAAU,EAAE5B,QAAQ,CAAC;YAC7B,IAAI,OAAOlC,EAAE,KAAK,UAAU,EAAE;cAC7BA,EAAE,CAACkC,QAAQ,CAAC;YACb;UACD,CAAC,MAAM;YACNT,UAAU,GAAG2C,UAAU;YACvBrE,IAAI,CAACc,OAAO,GAAG6B,MAAM,CAAC4B,mBAAmB,CAACvE,IAAI,CAAC;YAC/C4B,WAAW,CAAC5B,IAAI,CAAC;UAClB;QACD,CAAC;QAED,MAAMwE,YAAY,GAAGV,KAAK,IAAI3C,EAAE,CAAC4C,IAAI,CAAC,OAAO,EAAE,IAAIzE,gBAAgB,CAAC0E,UAAU,CAACF,KAAK,CAAC,CAAC;QACtF,IAAI,CAACnE,KAAK,CAACyD,IAAI,CAAC,OAAO,EAAEoB,YAAY,CAAC;QACtCrD,EAAE,CAACsD,EAAE,CAAC,UAAU,EAAE,MAAM,IAAI,CAAC9E,KAAK,CAAC+E,cAAc,CAAC,OAAO,EAAEF,YAAY,CAAC,CAAC;QAEzE,IAAI;UACH,MAAMJ,GAAG,CAACpE,IAAI,CAAC;QAChB,CAAC,CAAC,OAAO8D,KAAK,EAAE;UACf,IAAI9D,IAAI,CAACiB,iBAAiB,IAAI,CAACU,WAAW,EAAE;YAC3CC,WAAW,CAAC5B,IAAI,CAAC;UAClB;UAEAmB,EAAE,CAAC4C,IAAI,CAAC,OAAO,EAAE,IAAIzE,gBAAgB,CAAC0E,UAAU,CAACF,KAAK,CAAC,CAAC;QACzD;MACD,CAAC,EAAE,CAAC;MAEJ,OAAO3C,EAAE;IACV,CAAC;EACF;AACD;AAEA,SAASD,yBAAyBA,CAAChB,GAAG,EAAE;EACvC,MAAMyE,OAAO,GAAG;IAAE,GAAGzE;EAAI,CAAC;EAC1ByE,OAAO,CAAClE,IAAI,GAAI,GAAEP,GAAG,CAACK,QAAQ,IAAI,GAAI,GAAEL,GAAG,CAACS,MAAM,IAAI,EAAG,EAAC;EAC1D,OAAOgE,OAAO,CAACpE,QAAQ;EACvB,OAAOoE,OAAO,CAAChE,MAAM;EACrB,OAAOgE,OAAO;AACf;AAEA,SAASxE,kBAAkBA,CAACD,GAAG,EAAE;EAChC;EACA;EACA;EACA;EACA;EACA;EACA;EACA,OAAO;IACN0E,QAAQ,EAAE1E,GAAG,CAAC0E,QAAQ;IACtBC,IAAI,EAAE3E,GAAG,CAAC2E,IAAI;IACdC,QAAQ,EAAE5E,GAAG,CAAC4E,QAAQ,IAAI5E,GAAG,CAAC6E,IAAI,IAAI,WAAW;IACjDC,IAAI,EAAE9E,GAAG,CAAC8E,IAAI;IACdzE,QAAQ,EAAEL,GAAG,CAACK,QAAQ;IACtBI,MAAM,EAAET,GAAG,CAACS;EACb,CAAC;AACF;AAEArB,gBAAgB,CAAC6E,YAAY,GAAG,cAAcc,KAAK,CAAC;EACnD1F,WAAWA,CAACuE,KAAK,EAAE;IAClB,KAAK,CAACA,KAAK,CAACoB,OAAO,CAAC;IACpB,IAAI,CAACC,IAAI,GAAG,cAAc;IAC1BC,MAAM,CAACC,MAAM,CAAC,IAAI,EAAEvB,KAAK,CAAC;EAC3B;AACD,CAAC;AAEDxE,gBAAgB,CAAC0E,UAAU,GAAG,cAAciB,KAAK,CAAC;EACjD1F,WAAWA,CAACuE,KAAK,EAAE;IAClB,KAAK,CAACA,KAAK,CAACoB,OAAO,CAAC;IACpB,IAAI,CAACC,IAAI,GAAG,YAAY;IACxBC,MAAM,CAACC,MAAM,CAAC,IAAI,EAAEvB,KAAK,CAAC;EAC3B;AACD,CAAC;AAEDwB,MAAM,CAACC,OAAO,GAAGjG,gBAAgB"},"metadata":{},"sourceType":"script","externalDependencies":[]}