{"ast":null,"code":"'use strict';\n\nconst net = require('net');\nclass TimeoutError extends Error {\n  constructor(threshold, event) {\n    super(`Timeout awaiting '${event}' for ${threshold}ms`);\n    this.name = 'TimeoutError';\n    this.code = 'ETIMEDOUT';\n    this.event = event;\n  }\n}\nconst reentry = Symbol('reentry');\nconst noop = () => {};\nmodule.exports = (request, delays, options) => {\n  /* istanbul ignore next: this makes sure timed-out isn't called twice */\n  if (request[reentry]) {\n    return;\n  }\n  request[reentry] = true;\n  let stopNewTimeouts = false;\n  const addTimeout = (delay, callback, ...args) => {\n    // An error had been thrown before. Going further would result in uncaught errors.\n    // See https://github.com/sindresorhus/got/issues/631#issuecomment-435675051\n    if (stopNewTimeouts) {\n      return noop;\n    }\n\n    // Event loop order is timers, poll, immediates.\n    // The timed event may emit during the current tick poll phase, so\n    // defer calling the handler until the poll phase completes.\n    let immediate;\n    const timeout = setTimeout(() => {\n      immediate = setImmediate(callback, delay, ...args);\n      /* istanbul ignore next: added in node v9.7.0 */\n      if (immediate.unref) {\n        immediate.unref();\n      }\n    }, delay);\n\n    /* istanbul ignore next: in order to support electron renderer */\n    if (timeout.unref) {\n      timeout.unref();\n    }\n    const cancel = () => {\n      clearTimeout(timeout);\n      clearImmediate(immediate);\n    };\n    cancelers.push(cancel);\n    return cancel;\n  };\n  const {\n    host,\n    hostname\n  } = options;\n  const timeoutHandler = (delay, event) => {\n    request.emit('error', new TimeoutError(delay, event));\n    request.once('error', () => {}); // Ignore the `socket hung up` error made by request.abort()\n\n    request.abort();\n  };\n  const cancelers = [];\n  const cancelTimeouts = () => {\n    stopNewTimeouts = true;\n    cancelers.forEach(cancelTimeout => cancelTimeout());\n  };\n  request.once('error', cancelTimeouts);\n  request.once('response', response => {\n    response.once('end', cancelTimeouts);\n  });\n  if (delays.request !== undefined) {\n    addTimeout(delays.request, timeoutHandler, 'request');\n  }\n  if (delays.socket !== undefined) {\n    const socketTimeoutHandler = () => {\n      timeoutHandler(delays.socket, 'socket');\n    };\n    request.setTimeout(delays.socket, socketTimeoutHandler);\n\n    // `request.setTimeout(0)` causes a memory leak.\n    // We can just remove the listener and forget about the timer - it's unreffed.\n    // See https://github.com/sindresorhus/got/issues/690\n    cancelers.push(() => request.removeListener('timeout', socketTimeoutHandler));\n  }\n  if (delays.lookup !== undefined && !request.socketPath && !net.isIP(hostname || host)) {\n    request.once('socket', socket => {\n      /* istanbul ignore next: hard to test */\n      if (socket.connecting) {\n        const cancelTimeout = addTimeout(delays.lookup, timeoutHandler, 'lookup');\n        socket.once('lookup', cancelTimeout);\n      }\n    });\n  }\n  if (delays.connect !== undefined) {\n    request.once('socket', socket => {\n      /* istanbul ignore next: hard to test */\n      if (socket.connecting) {\n        const timeConnect = () => addTimeout(delays.connect, timeoutHandler, 'connect');\n        if (request.socketPath || net.isIP(hostname || host)) {\n          socket.once('connect', timeConnect());\n        } else {\n          socket.once('lookup', error => {\n            if (error === null) {\n              socket.once('connect', timeConnect());\n            }\n          });\n        }\n      }\n    });\n  }\n  if (delays.secureConnect !== undefined && options.protocol === 'https:') {\n    request.once('socket', socket => {\n      /* istanbul ignore next: hard to test */\n      if (socket.connecting) {\n        socket.once('connect', () => {\n          const cancelTimeout = addTimeout(delays.secureConnect, timeoutHandler, 'secureConnect');\n          socket.once('secureConnect', cancelTimeout);\n        });\n      }\n    });\n  }\n  if (delays.send !== undefined) {\n    request.once('socket', socket => {\n      const timeRequest = () => addTimeout(delays.send, timeoutHandler, 'send');\n      /* istanbul ignore next: hard to test */\n      if (socket.connecting) {\n        socket.once('connect', () => {\n          request.once('upload-complete', timeRequest());\n        });\n      } else {\n        request.once('upload-complete', timeRequest());\n      }\n    });\n  }\n  if (delays.response !== undefined) {\n    request.once('upload-complete', () => {\n      const cancelTimeout = addTimeout(delays.response, timeoutHandler, 'response');\n      request.once('response', cancelTimeout);\n    });\n  }\n};\nmodule.exports.TimeoutError = TimeoutError;","map":{"version":3,"names":["net","require","TimeoutError","Error","constructor","threshold","event","name","code","reentry","Symbol","noop","module","exports","request","delays","options","stopNewTimeouts","addTimeout","delay","callback","args","immediate","timeout","setTimeout","setImmediate","unref","cancel","clearTimeout","clearImmediate","cancelers","push","host","hostname","timeoutHandler","emit","once","abort","cancelTimeouts","forEach","cancelTimeout","response","undefined","socket","socketTimeoutHandler","removeListener","lookup","socketPath","isIP","connecting","connect","timeConnect","error","secureConnect","protocol","send","timeRequest"],"sources":["/home/amfarwati/Documents/SPOC_Analyse_Impact_IT/v_0.1/client/node_modules/got/source/utils/timed-out.js"],"sourcesContent":["'use strict';\nconst net = require('net');\n\nclass TimeoutError extends Error {\n\tconstructor(threshold, event) {\n\t\tsuper(`Timeout awaiting '${event}' for ${threshold}ms`);\n\t\tthis.name = 'TimeoutError';\n\t\tthis.code = 'ETIMEDOUT';\n\t\tthis.event = event;\n\t}\n}\n\nconst reentry = Symbol('reentry');\n\nconst noop = () => {};\n\nmodule.exports = (request, delays, options) => {\n\t/* istanbul ignore next: this makes sure timed-out isn't called twice */\n\tif (request[reentry]) {\n\t\treturn;\n\t}\n\n\trequest[reentry] = true;\n\n\tlet stopNewTimeouts = false;\n\n\tconst addTimeout = (delay, callback, ...args) => {\n\t\t// An error had been thrown before. Going further would result in uncaught errors.\n\t\t// See https://github.com/sindresorhus/got/issues/631#issuecomment-435675051\n\t\tif (stopNewTimeouts) {\n\t\t\treturn noop;\n\t\t}\n\n\t\t// Event loop order is timers, poll, immediates.\n\t\t// The timed event may emit during the current tick poll phase, so\n\t\t// defer calling the handler until the poll phase completes.\n\t\tlet immediate;\n\t\tconst timeout = setTimeout(() => {\n\t\t\timmediate = setImmediate(callback, delay, ...args);\n\t\t\t/* istanbul ignore next: added in node v9.7.0 */\n\t\t\tif (immediate.unref) {\n\t\t\t\timmediate.unref();\n\t\t\t}\n\t\t}, delay);\n\n\t\t/* istanbul ignore next: in order to support electron renderer */\n\t\tif (timeout.unref) {\n\t\t\ttimeout.unref();\n\t\t}\n\n\t\tconst cancel = () => {\n\t\t\tclearTimeout(timeout);\n\t\t\tclearImmediate(immediate);\n\t\t};\n\n\t\tcancelers.push(cancel);\n\n\t\treturn cancel;\n\t};\n\n\tconst {host, hostname} = options;\n\tconst timeoutHandler = (delay, event) => {\n\t\trequest.emit('error', new TimeoutError(delay, event));\n\t\trequest.once('error', () => {}); // Ignore the `socket hung up` error made by request.abort()\n\n\t\trequest.abort();\n\t};\n\n\tconst cancelers = [];\n\tconst cancelTimeouts = () => {\n\t\tstopNewTimeouts = true;\n\t\tcancelers.forEach(cancelTimeout => cancelTimeout());\n\t};\n\n\trequest.once('error', cancelTimeouts);\n\trequest.once('response', response => {\n\t\tresponse.once('end', cancelTimeouts);\n\t});\n\n\tif (delays.request !== undefined) {\n\t\taddTimeout(delays.request, timeoutHandler, 'request');\n\t}\n\n\tif (delays.socket !== undefined) {\n\t\tconst socketTimeoutHandler = () => {\n\t\t\ttimeoutHandler(delays.socket, 'socket');\n\t\t};\n\n\t\trequest.setTimeout(delays.socket, socketTimeoutHandler);\n\n\t\t// `request.setTimeout(0)` causes a memory leak.\n\t\t// We can just remove the listener and forget about the timer - it's unreffed.\n\t\t// See https://github.com/sindresorhus/got/issues/690\n\t\tcancelers.push(() => request.removeListener('timeout', socketTimeoutHandler));\n\t}\n\n\tif (delays.lookup !== undefined && !request.socketPath && !net.isIP(hostname || host)) {\n\t\trequest.once('socket', socket => {\n\t\t\t/* istanbul ignore next: hard to test */\n\t\t\tif (socket.connecting) {\n\t\t\t\tconst cancelTimeout = addTimeout(delays.lookup, timeoutHandler, 'lookup');\n\t\t\t\tsocket.once('lookup', cancelTimeout);\n\t\t\t}\n\t\t});\n\t}\n\n\tif (delays.connect !== undefined) {\n\t\trequest.once('socket', socket => {\n\t\t\t/* istanbul ignore next: hard to test */\n\t\t\tif (socket.connecting) {\n\t\t\t\tconst timeConnect = () => addTimeout(delays.connect, timeoutHandler, 'connect');\n\n\t\t\t\tif (request.socketPath || net.isIP(hostname || host)) {\n\t\t\t\t\tsocket.once('connect', timeConnect());\n\t\t\t\t} else {\n\t\t\t\t\tsocket.once('lookup', error => {\n\t\t\t\t\t\tif (error === null) {\n\t\t\t\t\t\t\tsocket.once('connect', timeConnect());\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tif (delays.secureConnect !== undefined && options.protocol === 'https:') {\n\t\trequest.once('socket', socket => {\n\t\t\t/* istanbul ignore next: hard to test */\n\t\t\tif (socket.connecting) {\n\t\t\t\tsocket.once('connect', () => {\n\t\t\t\t\tconst cancelTimeout = addTimeout(delays.secureConnect, timeoutHandler, 'secureConnect');\n\t\t\t\t\tsocket.once('secureConnect', cancelTimeout);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tif (delays.send !== undefined) {\n\t\trequest.once('socket', socket => {\n\t\t\tconst timeRequest = () => addTimeout(delays.send, timeoutHandler, 'send');\n\t\t\t/* istanbul ignore next: hard to test */\n\t\t\tif (socket.connecting) {\n\t\t\t\tsocket.once('connect', () => {\n\t\t\t\t\trequest.once('upload-complete', timeRequest());\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\trequest.once('upload-complete', timeRequest());\n\t\t\t}\n\t\t});\n\t}\n\n\tif (delays.response !== undefined) {\n\t\trequest.once('upload-complete', () => {\n\t\t\tconst cancelTimeout = addTimeout(delays.response, timeoutHandler, 'response');\n\t\t\trequest.once('response', cancelTimeout);\n\t\t});\n\t}\n};\n\nmodule.exports.TimeoutError = TimeoutError;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}