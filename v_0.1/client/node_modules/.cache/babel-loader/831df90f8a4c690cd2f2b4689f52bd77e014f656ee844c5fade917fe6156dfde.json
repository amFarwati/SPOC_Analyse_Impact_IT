{"ast":null,"code":"'use strict';\n\nconst {\n  URL\n} = require('url');\nconst is = require('@sindresorhus/is');\nconst knownHookEvents = require('./known-hook-events');\nconst merge = (target, ...sources) => {\n  for (const source of sources) {\n    for (const [key, sourceValue] of Object.entries(source)) {\n      if (is.undefined(sourceValue)) {\n        continue;\n      }\n      const targetValue = target[key];\n      if (is.urlInstance(targetValue) && (is.urlInstance(sourceValue) || is.string(sourceValue))) {\n        target[key] = new URL(sourceValue, targetValue);\n      } else if (is.plainObject(sourceValue)) {\n        if (is.plainObject(targetValue)) {\n          target[key] = merge({}, targetValue, sourceValue);\n        } else {\n          target[key] = merge({}, sourceValue);\n        }\n      } else if (is.array(sourceValue)) {\n        target[key] = merge([], sourceValue);\n      } else {\n        target[key] = sourceValue;\n      }\n    }\n  }\n  return target;\n};\nconst mergeOptions = (...sources) => {\n  sources = sources.map(source => source || {});\n  const merged = merge({}, ...sources);\n  const hooks = {};\n  for (const hook of knownHookEvents) {\n    hooks[hook] = [];\n  }\n  for (const source of sources) {\n    if (source.hooks) {\n      for (const hook of knownHookEvents) {\n        hooks[hook] = hooks[hook].concat(source.hooks[hook]);\n      }\n    }\n  }\n  merged.hooks = hooks;\n  return merged;\n};\nconst mergeInstances = (instances, methods) => {\n  const handlers = instances.map(instance => instance.defaults.handler);\n  const size = instances.length - 1;\n  return {\n    methods,\n    options: mergeOptions(...instances.map(instance => instance.defaults.options)),\n    handler: (options, next) => {\n      let iteration = -1;\n      const iterate = options => handlers[++iteration](options, iteration === size ? next : iterate);\n      return iterate(options);\n    }\n  };\n};\nmodule.exports = merge;\nmodule.exports.options = mergeOptions;\nmodule.exports.instances = mergeInstances;","map":{"version":3,"names":["URL","require","is","knownHookEvents","merge","target","sources","source","key","sourceValue","Object","entries","undefined","targetValue","urlInstance","string","plainObject","array","mergeOptions","map","merged","hooks","hook","concat","mergeInstances","instances","methods","handlers","instance","defaults","handler","size","length","options","next","iteration","iterate","module","exports"],"sources":["/home/amfarwati/Documents/SPOC_Analyse_Impact_IT/v_0.1/client/node_modules/got/source/merge.js"],"sourcesContent":["'use strict';\nconst {URL} = require('url');\nconst is = require('@sindresorhus/is');\nconst knownHookEvents = require('./known-hook-events');\n\nconst merge = (target, ...sources) => {\n\tfor (const source of sources) {\n\t\tfor (const [key, sourceValue] of Object.entries(source)) {\n\t\t\tif (is.undefined(sourceValue)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst targetValue = target[key];\n\t\t\tif (is.urlInstance(targetValue) && (is.urlInstance(sourceValue) || is.string(sourceValue))) {\n\t\t\t\ttarget[key] = new URL(sourceValue, targetValue);\n\t\t\t} else if (is.plainObject(sourceValue)) {\n\t\t\t\tif (is.plainObject(targetValue)) {\n\t\t\t\t\ttarget[key] = merge({}, targetValue, sourceValue);\n\t\t\t\t} else {\n\t\t\t\t\ttarget[key] = merge({}, sourceValue);\n\t\t\t\t}\n\t\t\t} else if (is.array(sourceValue)) {\n\t\t\t\ttarget[key] = merge([], sourceValue);\n\t\t\t} else {\n\t\t\t\ttarget[key] = sourceValue;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn target;\n};\n\nconst mergeOptions = (...sources) => {\n\tsources = sources.map(source => source || {});\n\tconst merged = merge({}, ...sources);\n\n\tconst hooks = {};\n\tfor (const hook of knownHookEvents) {\n\t\thooks[hook] = [];\n\t}\n\n\tfor (const source of sources) {\n\t\tif (source.hooks) {\n\t\t\tfor (const hook of knownHookEvents) {\n\t\t\t\thooks[hook] = hooks[hook].concat(source.hooks[hook]);\n\t\t\t}\n\t\t}\n\t}\n\n\tmerged.hooks = hooks;\n\n\treturn merged;\n};\n\nconst mergeInstances = (instances, methods) => {\n\tconst handlers = instances.map(instance => instance.defaults.handler);\n\tconst size = instances.length - 1;\n\n\treturn {\n\t\tmethods,\n\t\toptions: mergeOptions(...instances.map(instance => instance.defaults.options)),\n\t\thandler: (options, next) => {\n\t\t\tlet iteration = -1;\n\t\t\tconst iterate = options => handlers[++iteration](options, iteration === size ? next : iterate);\n\n\t\t\treturn iterate(options);\n\t\t}\n\t};\n};\n\nmodule.exports = merge;\nmodule.exports.options = mergeOptions;\nmodule.exports.instances = mergeInstances;\n"],"mappings":"AAAA,YAAY;;AACZ,MAAM;EAACA;AAAG,CAAC,GAAGC,OAAO,CAAC,KAAK,CAAC;AAC5B,MAAMC,EAAE,GAAGD,OAAO,CAAC,kBAAkB,CAAC;AACtC,MAAME,eAAe,GAAGF,OAAO,CAAC,qBAAqB,CAAC;AAEtD,MAAMG,KAAK,GAAGA,CAACC,MAAM,EAAE,GAAGC,OAAO,KAAK;EACrC,KAAK,MAAMC,MAAM,IAAID,OAAO,EAAE;IAC7B,KAAK,MAAM,CAACE,GAAG,EAAEC,WAAW,CAAC,IAAIC,MAAM,CAACC,OAAO,CAACJ,MAAM,CAAC,EAAE;MACxD,IAAIL,EAAE,CAACU,SAAS,CAACH,WAAW,CAAC,EAAE;QAC9B;MACD;MAEA,MAAMI,WAAW,GAAGR,MAAM,CAACG,GAAG,CAAC;MAC/B,IAAIN,EAAE,CAACY,WAAW,CAACD,WAAW,CAAC,KAAKX,EAAE,CAACY,WAAW,CAACL,WAAW,CAAC,IAAIP,EAAE,CAACa,MAAM,CAACN,WAAW,CAAC,CAAC,EAAE;QAC3FJ,MAAM,CAACG,GAAG,CAAC,GAAG,IAAIR,GAAG,CAACS,WAAW,EAAEI,WAAW,CAAC;MAChD,CAAC,MAAM,IAAIX,EAAE,CAACc,WAAW,CAACP,WAAW,CAAC,EAAE;QACvC,IAAIP,EAAE,CAACc,WAAW,CAACH,WAAW,CAAC,EAAE;UAChCR,MAAM,CAACG,GAAG,CAAC,GAAGJ,KAAK,CAAC,CAAC,CAAC,EAAES,WAAW,EAAEJ,WAAW,CAAC;QAClD,CAAC,MAAM;UACNJ,MAAM,CAACG,GAAG,CAAC,GAAGJ,KAAK,CAAC,CAAC,CAAC,EAAEK,WAAW,CAAC;QACrC;MACD,CAAC,MAAM,IAAIP,EAAE,CAACe,KAAK,CAACR,WAAW,CAAC,EAAE;QACjCJ,MAAM,CAACG,GAAG,CAAC,GAAGJ,KAAK,CAAC,EAAE,EAAEK,WAAW,CAAC;MACrC,CAAC,MAAM;QACNJ,MAAM,CAACG,GAAG,CAAC,GAAGC,WAAW;MAC1B;IACD;EACD;EAEA,OAAOJ,MAAM;AACd,CAAC;AAED,MAAMa,YAAY,GAAGA,CAAC,GAAGZ,OAAO,KAAK;EACpCA,OAAO,GAAGA,OAAO,CAACa,GAAG,CAACZ,MAAM,IAAIA,MAAM,IAAI,CAAC,CAAC,CAAC;EAC7C,MAAMa,MAAM,GAAGhB,KAAK,CAAC,CAAC,CAAC,EAAE,GAAGE,OAAO,CAAC;EAEpC,MAAMe,KAAK,GAAG,CAAC,CAAC;EAChB,KAAK,MAAMC,IAAI,IAAInB,eAAe,EAAE;IACnCkB,KAAK,CAACC,IAAI,CAAC,GAAG,EAAE;EACjB;EAEA,KAAK,MAAMf,MAAM,IAAID,OAAO,EAAE;IAC7B,IAAIC,MAAM,CAACc,KAAK,EAAE;MACjB,KAAK,MAAMC,IAAI,IAAInB,eAAe,EAAE;QACnCkB,KAAK,CAACC,IAAI,CAAC,GAAGD,KAAK,CAACC,IAAI,CAAC,CAACC,MAAM,CAAChB,MAAM,CAACc,KAAK,CAACC,IAAI,CAAC,CAAC;MACrD;IACD;EACD;EAEAF,MAAM,CAACC,KAAK,GAAGA,KAAK;EAEpB,OAAOD,MAAM;AACd,CAAC;AAED,MAAMI,cAAc,GAAGA,CAACC,SAAS,EAAEC,OAAO,KAAK;EAC9C,MAAMC,QAAQ,GAAGF,SAAS,CAACN,GAAG,CAACS,QAAQ,IAAIA,QAAQ,CAACC,QAAQ,CAACC,OAAO,CAAC;EACrE,MAAMC,IAAI,GAAGN,SAAS,CAACO,MAAM,GAAG,CAAC;EAEjC,OAAO;IACNN,OAAO;IACPO,OAAO,EAAEf,YAAY,CAAC,GAAGO,SAAS,CAACN,GAAG,CAACS,QAAQ,IAAIA,QAAQ,CAACC,QAAQ,CAACI,OAAO,CAAC,CAAC;IAC9EH,OAAO,EAAEA,CAACG,OAAO,EAAEC,IAAI,KAAK;MAC3B,IAAIC,SAAS,GAAG,CAAC,CAAC;MAClB,MAAMC,OAAO,GAAGH,OAAO,IAAIN,QAAQ,CAAC,EAAEQ,SAAS,CAAC,CAACF,OAAO,EAAEE,SAAS,KAAKJ,IAAI,GAAGG,IAAI,GAAGE,OAAO,CAAC;MAE9F,OAAOA,OAAO,CAACH,OAAO,CAAC;IACxB;EACD,CAAC;AACF,CAAC;AAEDI,MAAM,CAACC,OAAO,GAAGlC,KAAK;AACtBiC,MAAM,CAACC,OAAO,CAACL,OAAO,GAAGf,YAAY;AACrCmB,MAAM,CAACC,OAAO,CAACb,SAAS,GAAGD,cAAc"},"metadata":{},"sourceType":"script","externalDependencies":[]}