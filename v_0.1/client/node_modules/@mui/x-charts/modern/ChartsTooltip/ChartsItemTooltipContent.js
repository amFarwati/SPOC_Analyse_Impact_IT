import * as React from 'react';
import { SeriesContext } from '../context/SeriesContextProvider';
import { ChartsTooltipTable, ChartsTooltipCell, ChartsTooltipMark, ChartsTooltipPaper, ChartsTooltipRow } from './ChartsTooltipTable';
import { jsx as _jsx } from "react/jsx-runtime";
import { jsxs as _jsxs } from "react/jsx-runtime";
export function DefaultChartsItemContent(props) {
  const {
    series,
    itemData,
    sx,
    classes
  } = props;
  if (itemData.dataIndex === undefined) {
    return null;
  }
  const {
    displayedLabel,
    color
  } = series.type === 'pie' ? {
    color: series.data[itemData.dataIndex].color,
    displayedLabel: series.data[itemData.dataIndex].label
  } : {
    color: series.color,
    displayedLabel: series.label
  };

  // TODO: Manage to let TS understand series.data and series.valueFormatter are coherent
  // @ts-ignore
  const formattedValue = series.valueFormatter(series.data[itemData.dataIndex]);
  return /*#__PURE__*/_jsx(ChartsTooltipPaper, {
    sx: sx,
    variant: "outlined",
    className: classes.root,
    children: /*#__PURE__*/_jsx(ChartsTooltipTable, {
      children: /*#__PURE__*/_jsx("tbody", {
        children: /*#__PURE__*/_jsxs(ChartsTooltipRow, {
          children: [/*#__PURE__*/_jsx(ChartsTooltipCell, {
            className: classes.markCell,
            children: /*#__PURE__*/_jsx(ChartsTooltipMark, {
              ownerState: {
                color
              }
            })
          }), /*#__PURE__*/_jsx(ChartsTooltipCell, {
            className: classes.labelCell,
            children: displayedLabel
          }), /*#__PURE__*/_jsx(ChartsTooltipCell, {
            className: classes.valueCell,
            children: formattedValue
          })]
        })
      })
    })
  });
}
export function ChartsItemTooltipContent(props) {
  const {
    content,
    itemData,
    sx,
    classes
  } = props;
  const series = React.useContext(SeriesContext)[itemData.type].series[itemData.seriesId];
  const Content = content ?? DefaultChartsItemContent;
  return /*#__PURE__*/_jsx(Content, {
    itemData: itemData,
    series: series,
    sx: sx,
    classes: classes
  });
}